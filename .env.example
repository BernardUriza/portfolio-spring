# ==============================================================================
# LOCAL DEVELOPMENT CONFIGURATION
# ==============================================================================
# Copy this file to .env and fill in your actual values
# The .env file is gitignored for security

# Spring Application Configuration
SPRING_APPLICATION_NAME=portfolio-spring
SERVER_PORT=8080

# ==============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# ==============================================================================
# CRITICAL: Credentials are NO LONGER in application.properties for security
# You MUST configure these in your .env file for local development

# For local development with PostgreSQL (recommended):
SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/portfolio_db
SPRING_DATASOURCE_USERNAME=postgres
SPRING_DATASOURCE_PASSWORD=your_secure_password_here

# For production with Neon (free PostgreSQL):
# Get your connection string from: https://console.neon.tech
# Render.com will parse DATABASE_URL automatically (see render-entrypoint.sh)
# DATABASE_URL=postgres://user:pass@ep-xxx.us-east-2.aws.neon.tech/neondb?sslmode=require

# For quick local testing with H2 (in-memory, not persistent):
# SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb
# SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.h2.Driver
# SPRING_DATASOURCE_USERNAME=sa
# SPRING_DATASOURCE_PASSWORD=
# SPRING_H2_CONSOLE_ENABLED=true
# SPRING_H2_CONSOLE_PATH=/h2-console
# SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.H2Dialect
# SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
# SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION=true
# SPRING_SQL_INIT_MODE=always

# Logging Configuration
LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=INFO
LOGGING_LEVEL_ORG_HIBERNATE=INFO
LOGGING_LEVEL_COM_PORTFOLIO=DEBUG

# Mail Configuration
SPRING_MAIL_HOST=localhost
SPRING_MAIL_PORT=1025
APP_MAIL_FROM=test@test.com
APP_MAIL_TO=test@test.com

# CORS Configuration
APP_CORS_ALLOWED_ORIGINS=http://localhost:4200

# GitHub API Configuration
# Get your GitHub Personal Access Token from: https://github.com/settings/tokens
GITHUB_USERNAME=your_github_username
GITHUB_TOKEN=your_github_personal_access_token

# Anthropic Claude API Configuration
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_api_key
ANTHROPIC_API_URL=https://api.anthropic.com/v1/messages

# Scheduling Configuration
SPRING_TASK_SCHEDULING_POOL_SIZE=2

# ==============================================================================
# ADMIN & SECURITY
# ==============================================================================
# Admin token for protected endpoints (generate a secure random string)
PORTFOLIO_ADMIN_TOKEN=dev-token-change-in-production

# Factory Reset Configuration
# ⚠️  DANGER ZONE: Factory Reset functionality for admin panel
# Set to true to enable the destructive factory reset endpoint
ENABLE_FACTORY_RESET=false
# Admin token required to authorize factory reset operations
ADMIN_RESET_TOKEN=your-secure-admin-token-here

# ==============================================================================
# DEPLOYMENT NOTES
# ==============================================================================
# For Render.com deployment:
# 1. Create account at https://console.neon.tech (free PostgreSQL)
# 2. Get your DATABASE_URL from Neon dashboard
# 3. Add all these variables in Render Dashboard → Environment:
#    - DATABASE_URL (from Neon)
#    - GITHUB_USERNAME
#    - GITHUB_TOKEN
#    - ANTHROPIC_API_KEY
#    - PORTFOLIO_ADMIN_TOKEN
#
# See docs/deployment/neon-setup.md for detailed instructions