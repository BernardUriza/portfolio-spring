services:
  - type: web
    name: portfolio-backend
    runtime: docker
    repo: https://github.com/BernardUriza/portfolio-spring.git
    branch: main
    dockerfilePath: ./Dockerfile
    plan: free
    region: oregon
    envVars:
      # Port configuration - Render will inject this
      # No need to hardcode, let Render handle it
      - key: SPRING_PROFILES_ACTIVE
        value: render
      # Database URL - External PostgreSQL (Neon/Supabase/etc)
      # Set this manually in Render Dashboard â†’ Environment
      # Format: postgres://user:pass@host:5432/dbname?sslmode=require
      - key: DATABASE_URL
        sync: false
      # GitHub API Configuration (Required)
      - key: GITHUB_USERNAME
        sync: false
      - key: GITHUB_TOKEN
        sync: false
      # Anthropic API Configuration (Required for AI features)
      - key: ANTHROPIC_API_KEY
        sync: false
      # Admin Security
      - key: PORTFOLIO_ADMIN_TOKEN
        sync: false
      - key: APP_CORS_ALLOWED_ORIGINS
        value: https://localhost:4200,https://*.netlify.app
      # Admin Security - Relaxed mode for testing
      # Security is disabled by default in render profile
      # To enable security, set APP_ADMIN_SECURITY_ENABLED=true and provide X_ADMIN_TOKEN
      - key: APP_ADMIN_SECURITY_ENABLED
        value: "false"
    healthCheckPath: /actuator/health

# No database managed by Render - using external provider (Neon/Supabase)
# databases:
#   - name: portfolio-db
#     databaseName: portfolio_db
#     user: portfolio_user
#     plan: free
#     region: oregon