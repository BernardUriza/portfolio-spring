# Render.com Production Profile
# Created by Bernard Orozco
# This profile is automatically activated by render-entrypoint.sh

# ==========================================
# Server Configuration
# ==========================================
server.port=${PORT:8080}
server.error.include-message=never
server.error.include-stacktrace=never
server.error.include-exception=false
server.http2.enabled=true
server.forward-headers-strategy=native

# ==========================================
# Database Configuration (Auto-configured by render-entrypoint.sh)
# ==========================================
# The entrypoint script converts DATABASE_URL to these properties:
# - SPRING_DATASOURCE_URL
# - SPRING_DATASOURCE_USERNAME
# - SPRING_DATASOURCE_PASSWORD

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Connection Pool - Optimized for Render free tier
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# ==========================================
# Flyway Configuration
# ==========================================
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false

# ==========================================
# CORS Configuration
# ==========================================
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://*.netlify.app,https://bernarduriza.com}

# ==========================================
# Security Configuration
# ==========================================
# CRITICAL: Admin token REQUIRED via environment variable (no default for security)
portfolio.admin.token=${PORTFOLIO_ADMIN_TOKEN}
portfolio.admin.security.enabled=${PORTFOLIO_ADMIN_SECURITY_ENABLED:true}

# ==========================================
# API Keys (Required)
# ==========================================
github.username=${GITHUB_USERNAME:}
github.token=${GITHUB_TOKEN:}
anthropic.api.key=${ANTHROPIC_API_KEY:}

# ==========================================
# Feature Flags
# ==========================================
app.ai.enabled=${ENABLE_AI_FEATURES:false}
app.narration.enabled=${ENABLE_LIVE_NARRATION:false}
app.admin.factory-reset.enabled=${ENABLE_FACTORY_RESET:false}
app.admin.factory-reset.token=${ADMIN_RESET_TOKEN:}

# Auto Sync Configuration
portfolio.features.auto-sync.enabled=${FEATURE_AUTO_SYNC_ENABLED:true}
portfolio.features.auto-sync.allow-manual-trigger=${FEATURE_MANUAL_SYNC_ENABLED:true}
portfolio.features.auto-sync.allow-scheduled-sync=${FEATURE_SCHEDULED_SYNC_ENABLED:false}

# AI Curation Configuration
portfolio.features.ai-curation.enabled=${FEATURE_AI_CURATION_ENABLED:false}
portfolio.features.ai-curation.allow-manual-curation=${FEATURE_MANUAL_CURATION_ENABLED:true}

# Rate Limiting - Stricter for production
portfolio.features.rate-limiting.enabled=true
portfolio.features.rate-limiting.admin-endpoints-per-minute=30
portfolio.features.rate-limiting.factory-reset-per-hour=1
portfolio.features.rate-limiting.sync-operations-per-minute=5
portfolio.features.rate-limiting.ai-curation-per-minute=20

# ==========================================
# Logging Configuration
# ==========================================
logging.level.root=WARN
logging.level.com.portfolio=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework.security=WARN

# Logging Pattern (includes correlation ID)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{correlationId:-}] %logger{36} - %msg%n

# ==========================================
# Actuator & Health Checks
# ==========================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.health.db.enabled=true

# ==========================================
# Cache Configuration
# ==========================================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=15m

# ==========================================
# Resilience4j Configuration
# ==========================================
# GitHub API Resilience
resilience4j.retry.instances.github.max-attempts=5
resilience4j.retry.instances.github.wait-duration=2s
resilience4j.circuitbreaker.instances.github.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.github.wait-duration-in-open-state=60s

# Claude AI Resilience
resilience4j.retry.instances.claude.max-attempts=3
resilience4j.retry.instances.claude.wait-duration=3s

# ==========================================
# Session Configuration
# ==========================================
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=strict
