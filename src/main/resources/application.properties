# Load local .env (key=value) if present
spring.config.import=optional:file:.env[.properties]

# Spring Boot Application
spring.application.name=portfolio-spring
server.port=8080

# H2 Database Configuration (In-memory for development)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Mail Configuration (mock for development)
spring.mail.host=localhost
spring.mail.port=1025
app.mail.from=test@test.com
app.mail.to=test@test.com

# CORS Configuration
# Allow both localhost and 127.0.0.1 for Angular dev servers (vite/ng)
app.cors.allowed-origins=http://localhost:4200,http://127.0.0.1:4200,http://localhost:5173,http://127.0.0.1:5173

# Logging Configuration
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.com.portfolio=DEBUG

# Correlation ID Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-NO_CORRELATION_ID}] [%X{requestId:-NO_REQUEST_ID}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-NO_CORRELATION_ID}] [%X{requestId:-NO_REQUEST_ID}] %logger{36} - %msg%n

# Scheduling
spring.task.scheduling.pool.size=2

# GitHub API Configuration
github.username=${GITHUB_USERNAME:BernardUriza}
github.token=${GITHUB_TOKEN:}

# Anthropic Claude API Configuration
anthropic.api.key=${ANTHROPIC_API_KEY:}
anthropic.api.url=${ANTHROPIC_API_URL:https://api.anthropic.com/v1/messages}

# Factory Reset Configuration
app.admin.factory-reset.enabled=${ENABLE_FACTORY_RESET:false}
app.admin.factory-reset.token=${ADMIN_RESET_TOKEN:}

# Live Narration Configuration (disabled in dev by default)
app.narration.enabled=${ENABLE_LIVE_NARRATION:false}

# AI Features master switch (disable AI endpoints)
app.ai.enabled=${ENABLE_AI_FEATURES:false}

# Admin Security Configuration
portfolio.admin.token=${PORTFOLIO_ADMIN_TOKEN:}
portfolio.admin.security.enabled=${PORTFOLIO_ADMIN_SECURITY_ENABLED:true}

# Feature Flags Configuration
portfolio.features.auto-sync.enabled=${FEATURE_AUTO_SYNC_ENABLED:true}
portfolio.features.auto-sync.allow-manual-trigger=${FEATURE_MANUAL_SYNC_ENABLED:true}
portfolio.features.auto-sync.allow-scheduled-sync=${FEATURE_SCHEDULED_SYNC_ENABLED:true}
portfolio.features.auto-sync.max-concurrent-syncs=${FEATURE_MAX_CONCURRENT_SYNCS:1}
portfolio.features.auto-sync.max-retry-attempts=${FEATURE_MAX_RETRY_ATTEMPTS:3}

portfolio.features.ai-curation.enabled=${FEATURE_AI_CURATION_ENABLED:true}
portfolio.features.ai-curation.allow-manual-curation=${FEATURE_MANUAL_CURATION_ENABLED:true}
portfolio.features.ai-curation.respect-field-protections=${FEATURE_RESPECT_PROTECTIONS:true}
portfolio.features.ai-curation.max-analysis-length=${FEATURE_MAX_ANALYSIS_LENGTH:50000}
portfolio.features.ai-curation.skip-empty-readmes=${FEATURE_SKIP_EMPTY_READMES:true}

portfolio.features.factory-reset.enabled=${FEATURE_FACTORY_RESET_ENABLED:true}
portfolio.features.factory-reset.require-confirmation-header=${FEATURE_REQUIRE_CONFIRMATION:true}
portfolio.features.factory-reset.allow-sse-streaming=${FEATURE_ALLOW_SSE_STREAMING:true}
portfolio.features.factory-reset.rate-limit-minutes=${FEATURE_FACTORY_RESET_RATE_LIMIT:10}
portfolio.features.factory-reset.audit-all-operations=${FEATURE_AUDIT_ALL_OPERATIONS:true}

portfolio.features.admin-endpoints.enabled=${FEATURE_ADMIN_ENDPOINTS_ENABLED:true}
portfolio.features.admin-endpoints.allow-portfolio-management=${FEATURE_PORTFOLIO_MGMT_ENABLED:true}
portfolio.features.admin-endpoints.allow-source-repository-management=${FEATURE_SOURCE_REPO_MGMT_ENABLED:true}
portfolio.features.admin-endpoints.allow-sync-configuration=${FEATURE_SYNC_CONFIG_ENABLED:true}
portfolio.features.admin-endpoints.allow-completion-analysis=${FEATURE_COMPLETION_ANALYSIS_ENABLED:true}

portfolio.features.rate-limiting.enabled=${FEATURE_RATE_LIMITING_ENABLED:true}
portfolio.features.rate-limiting.admin-endpoints-per-minute=${FEATURE_ADMIN_RATE_LIMIT:60}
portfolio.features.rate-limiting.factory-reset-per-hour=${FEATURE_FACTORY_RESET_HOURLY_LIMIT:1}
portfolio.features.rate-limiting.sync-operations-per-minute=${FEATURE_SYNC_RATE_LIMIT:10}
portfolio.features.rate-limiting.ai-curation-per-minute=${FEATURE_AI_CURATION_RATE_LIMIT:30}

# Resilience4j Configuration
# GitHub API Resilience
resilience4j.retry.instances.github.max-attempts=${GITHUB_RETRY_MAX_ATTEMPTS:3}
resilience4j.retry.instances.github.wait-duration=${GITHUB_RETRY_WAIT_DURATION:500ms}
resilience4j.retry.instances.github.exponential-backoff-multiplier=${GITHUB_RETRY_BACKOFF_MULTIPLIER:2}
resilience4j.retry.instances.github.randomized-wait-factor=${GITHUB_RETRY_JITTER:0.1}
resilience4j.retry.instances.github.enable-exponential-backoff=true

resilience4j.ratelimiter.instances.github.limit-for-period=${GITHUB_RATE_LIMIT:30}
resilience4j.ratelimiter.instances.github.limit-refresh-period=${GITHUB_RATE_REFRESH_PERIOD:60s}
resilience4j.ratelimiter.instances.github.timeout-duration=${GITHUB_RATE_TIMEOUT:1s}

resilience4j.circuitbreaker.instances.github.sliding-window-size=${GITHUB_CB_WINDOW_SIZE:20}
resilience4j.circuitbreaker.instances.github.failure-rate-threshold=${GITHUB_CB_FAILURE_THRESHOLD:50}
resilience4j.circuitbreaker.instances.github.wait-duration-in-open-state=${GITHUB_CB_WAIT_DURATION:30s}
resilience4j.circuitbreaker.instances.github.permitted-number-of-calls-in-half-open-state=${GITHUB_CB_HALF_OPEN_CALLS:5}
resilience4j.circuitbreaker.instances.github.sliding-window-type=count_based

resilience4j.timelimiter.instances.github.timeout-duration=${GITHUB_TIMEOUT:12s}

# Claude AI Resilience
resilience4j.retry.instances.claude.max-attempts=${CLAUDE_RETRY_MAX_ATTEMPTS:3}
resilience4j.retry.instances.claude.wait-duration=${CLAUDE_RETRY_WAIT_DURATION:1s}
resilience4j.retry.instances.claude.exponential-backoff-multiplier=${CLAUDE_RETRY_BACKOFF_MULTIPLIER:2}
resilience4j.retry.instances.claude.randomized-wait-factor=${CLAUDE_RETRY_JITTER:0.15}
resilience4j.retry.instances.claude.enable-exponential-backoff=true

resilience4j.ratelimiter.instances.claude.limit-for-period=${CLAUDE_RATE_LIMIT:10}
resilience4j.ratelimiter.instances.claude.limit-refresh-period=${CLAUDE_RATE_REFRESH_PERIOD:60s}
resilience4j.ratelimiter.instances.claude.timeout-duration=${CLAUDE_RATE_TIMEOUT:2s}

resilience4j.circuitbreaker.instances.claude.sliding-window-size=${CLAUDE_CB_WINDOW_SIZE:20}
resilience4j.circuitbreaker.instances.claude.failure-rate-threshold=${CLAUDE_CB_FAILURE_THRESHOLD:50}
resilience4j.circuitbreaker.instances.claude.wait-duration-in-open-state=${CLAUDE_CB_WAIT_DURATION:60s}
resilience4j.circuitbreaker.instances.claude.permitted-number-of-calls-in-half-open-state=${CLAUDE_CB_HALF_OPEN_CALLS:5}
resilience4j.circuitbreaker.instances.claude.sliding-window-type=count_based

resilience4j.timelimiter.instances.claude.timeout-duration=${CLAUDE_TIMEOUT:30s}

# Claude Token Budget
portfolio.ai.claude.daily-token-budget=${CLAUDE_DAILY_TOKEN_BUDGET:100000}
portfolio.ai.claude.warn-threshold=${CLAUDE_WARN_THRESHOLD:0.8}
portfolio.ai.claude.budget-reset-hour=${CLAUDE_BUDGET_RESET_HOUR:0}

# Cache Configuration
portfolio.cache.completion.max-size=${COMPLETION_CACHE_MAX_SIZE:1000}
portfolio.cache.completion.expire-after-write=${COMPLETION_CACHE_EXPIRE:PT30M}
portfolio.cache.projects.max-size=${PROJECTS_CACHE_MAX_SIZE:500}
portfolio.cache.projects.expire-after-write=${PROJECTS_CACHE_EXPIRE:PT15M}

# Cache Configuration
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=300s

# Server Configuration - Compression
server.compression.enabled=true
server.compression.mime-types=application/json,text/html,text/plain,application/xml,text/css,application/javascript
