# Production Configuration
# Created by Bernard Orozco
# Activate with: --spring.profiles.active=prod

# Server Configuration
server.port=${PORT:8080}
server.error.include-message=never
server.error.include-stacktrace=never
server.error.include-exception=false

# HTTPS/TLS Configuration (if using embedded Tomcat with SSL)
# Uncomment and configure if not using reverse proxy (nginx/Apache)
# server.ssl.enabled=${SSL_ENABLED:false}
# server.ssl.key-store=${SSL_KEYSTORE_PATH:classpath:keystore.p12}
# server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=tomcat
# server.ssl.protocol=TLS
# server.ssl.enabled-protocols=TLSv1.3,TLSv1.2
# server.ssl.ciphers=TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256

# HTTP/2 Support
server.http2.enabled=true

# Forward Headers (when behind reverse proxy)
server.forward-headers-strategy=native

# Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

# Flyway Configuration - Production
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false
spring.flyway.placeholder-replacement=false

# CORS Configuration - Production
# IMPORTANT: Update with your actual production domain
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://bernarduriza.com}

# Security Configuration
portfolio.admin.token=${PORTFOLIO_ADMIN_TOKEN}
portfolio.admin.security.enabled=true

# Security Headers Configuration
app.security.csp.enabled=true
app.security.csp.policy=default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.anthropic.com https://api.github.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self'

# Logging Configuration - Production
logging.level.root=WARN
logging.level.com.portfolio=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN

# Logging File Configuration
logging.file.path=${LOG_PATH:/var/log/portfolio}
logging.file.name=${LOG_FILE:portfolio-backend}

# Logging Pattern for Production (includes correlation ID)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{correlationId:-NO_ID}] %logger{36} - %msg%n

# API Keys (must be set as environment variables)
github.token=${GITHUB_TOKEN}
anthropic.api.key=${ANTHROPIC_API_KEY}

# Feature Flags - Production
app.ai.enabled=${ENABLE_AI_FEATURES:true}
app.narration.enabled=${ENABLE_LIVE_NARRATION:false}
app.admin.factory-reset.enabled=${ENABLE_FACTORY_RESET:false}
app.admin.factory-reset.token=${ADMIN_RESET_TOKEN}

# Rate Limiting - Production (more restrictive)
portfolio.features.rate-limiting.enabled=true
portfolio.features.rate-limiting.admin-endpoints-per-minute=30
portfolio.features.rate-limiting.factory-reset-per-hour=1
portfolio.features.rate-limiting.sync-operations-per-minute=5
portfolio.features.rate-limiting.ai-curation-per-minute=20

# Resilience4j - Production
resilience4j.retry.instances.github.max-attempts=5
resilience4j.retry.instances.github.wait-duration=2s
resilience4j.circuitbreaker.instances.github.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.github.wait-duration-in-open-state=60s

resilience4j.retry.instances.anthropic.max-attempts=3
resilience4j.retry.instances.anthropic.wait-duration=3s

# Health Checks & Metrics
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.metrics.enable.all=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Spring Boot Actuator
management.server.port=8080
management.endpoints.web.base-path=/actuator

# Connection Pool - Production
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA Performance - Production
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=30m

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=strict

# Security Headers (if using Spring Security)
server.http2.enabled=true
